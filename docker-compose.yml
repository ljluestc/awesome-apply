version: '3.8'

services:
  # ClickHouse Database
  clickhouse:
    build:
      context: .
      dockerfile: docker/database/Dockerfile
    container_name: job-automation-db
    environment:
      - CLICKHOUSE_DB=job_automation
      - CLICKHOUSE_USER=automation_user
      - CLICKHOUSE_PASSWORD=secure_password_123
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./docker/database/config:/etc/clickhouse-server/config.d
    networks:
      - job-automation
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Job Scraper Service
  scraper:
    build:
      context: .
      dockerfile: docker/scraper/Dockerfile
    container_name: job-scraper
    environment:
      - PYTHONUNBUFFERED=1
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=automation_user
      - CLICKHOUSE_PASSWORD=secure_password_123
      - CLICKHOUSE_DB=job_automation
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - job-automation
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
    restart: unless-stopped

  # Automation Service
  automation:
    build:
      context: .
      dockerfile: docker/automation/Dockerfile
    container_name: job-automation
    environment:
      - PYTHONUNBUFFERED=1
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=automation_user
      - CLICKHOUSE_PASSWORD=secure_password_123
      - CLICKHOUSE_DB=job_automation
      - FLASK_ENV=production
    ports:
      - "8080:8080"
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./resumes:/app/resumes
    networks:
      - job-automation
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
    restart: unless-stopped

  # Web Interface
  web:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    container_name: job-web-interface
    environment:
      - FLASK_ENV=production
      - CLICKHOUSE_HOST=clickhouse
      - CLICKHOUSE_PORT=8123
      - CLICKHOUSE_USER=automation_user
      - CLICKHOUSE_PASSWORD=secure_password_123
      - CLICKHOUSE_DB=job_automation
    ports:
      - "5000:5000"
    depends_on:
      clickhouse:
        condition: service_healthy
    volumes:
      - ./templates:/app/templates
      - ./static:/app/static
    networks:
      - job-automation
    restart: unless-stopped

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: job-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - job-automation
    command: redis-server --appendonly yes
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: job-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - automation
    networks:
      - job-automation
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: job-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - job-automation
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: job-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - job-automation
    restart: unless-stopped

networks:
  job-automation:
    driver: bridge

volumes:
  clickhouse_data:
  redis_data:
  prometheus_data:
  grafana_data: