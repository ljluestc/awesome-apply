apiVersion: apps/v1
kind: Deployment
metadata:
  name: job-scraper-deployment
  namespace: jobautomation
  labels:
    app: job-scraper
    component: scraper
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: job-scraper
  template:
    metadata:
      labels:
        app: job-scraper
        component: scraper
    spec:
      containers:
      - name: job-scraper
        image: job-automation/scraper:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: CLICKHOUSE_HOST
          value: "clickhouse-service"
        - name: CLICKHOUSE_PORT
          value: "8123"
        - name: CLICKHOUSE_USER
          valueFrom:
            secretKeyRef:
              name: clickhouse-secret
              key: username
        - name: CLICKHOUSE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: clickhouse-secret
              key: password
        - name: CLICKHOUSE_DB
          value: "job_automation"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: DISPLAY
          value: ":99"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        volumeMounts:
        - name: scraper-logs
          mountPath: /app/logs
        - name: scraper-data
          mountPath: /app/data
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import psutil; exit(0 if any('python' in p.name() for p in psutil.process_iter()) else 1)"
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import sys; sys.exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 5
      volumes:
      - name: scraper-logs
        emptyDir: {}
      - name: scraper-data
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: job-scraper-service
  namespace: jobautomation
  labels:
    app: job-scraper
    component: scraper
spec:
  selector:
    app: job-scraper
  ports:
  - name: metrics
    port: 8080
    targetPort: 8080
  type: ClusterIP